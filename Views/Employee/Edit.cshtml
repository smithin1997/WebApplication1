@model WebApplication1.Models.tbl_Employee

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <script type="text/javascript">
        window.onload = function () {
            var DOBValue = document.getElementById("DOBValue").value;
            var FormatedDOB = new Date(DOBValue).toISOString().substring(0, 10);
            document.getElementById("DOB").value = FormatedDOB;
            var GenderValue = document.getElementById("GenderValue").value;
            Male = document.getElementsByClassName(GenderValue);
            Male[0].checked = true;
        };
        $('#DOB').datepicker({
            onSelect: function () {
                $('#data').text(this.value);
            }
        });
        //function GetGender(Gender) {
        //    if (GenderValue == Gender) {
        //        return true;
        //    }
        //    return false;
        //}
    </script>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tbl_Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.TextBoxFor(m => m.Gender, new { id = "GenderValue", style = "display: none;" })
        @Html.TextBoxFor(m => m.DOB, new { id = "DOBValue", style = "display: none;" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="controls">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "input-xlarge" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "help-block" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " })
            <div class="controls">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "input-xlarge" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "help-block" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
            <div class="controls">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input-xlarge" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "help-block" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })
            <div class="controls">
                Male:   @Html.RadioButton("Gender", "Male", htmlAttributes: new { @class = "Male " })
                Female: @Html.RadioButton("Gender", "Female", htmlAttributes: new { @class = "Female " })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "help-block" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label " })
            <div class="controls">
                @Html.EditorFor(model => model.DOB, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", placeholder = "DD/MM/YYYY", maxlength = "100" })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "help-block" })
            </div>
        </div>

        @*<div class="control-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
            <div class="controls">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "input-xlarge" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "help-block" })
            </div>
        </div>*@
        @*<div class="control-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label " })
            <div class="controls">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "input-xlarge" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "help-block" })
            </div>
        </div>*@

        <div class="control-group">
            <div class="controls">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
